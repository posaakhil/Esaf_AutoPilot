name: Build and Release ESAF Automation

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Read VERSION file
      id: get_version
      run: |
        $version = Get-Content VERSION -Raw
        $version = $version.Trim()
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
        echo "Release version: $version"

    - name: Install dependencies
      run: |
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Verify required files exist
      run: |
        $required = @(
          "autopilot.py",
          "esaf_automation.py",
          "merge_and_cleanup.py",
          "Data_Analysis_Split.py",
          "summary_pivot.py",
          "Interactive_Dashboard.py",
          "complete_process.py",
          "esaf_config_defaults.json"
        )
        foreach ($file in $required) {
          if (-not (Test-Path $file)) {
            Write-Error "Missing required file: $file"
            exit 1
          }
        }
        Write-Host "✅ All required files present"

    - name: Build executable with PyInstaller
      run: |
        pyinstaller --onefile --windowed --add-data "esaf_config_defaults.json;." autopilot.py

    - name: Verify .exe was built
      run: |
        if (Test-Path "dist\\autopilot.exe") {
          Write-Host "✅ .exe built successfully"
        } else {
          Write-Error "❌ .exe not found in dist folder"
          exit 1
        }

    - name: Bundle all scripts and config
      run: |
        Copy-Item "*.py" "dist/"
        Copy-Item "esaf_config_defaults.json" "dist/"
        Move-Item "dist\\autopilot.exe" "dist\\esaf-automation-v$($env:VERSION).exe"
        
        # Rename .exe
        Move-Item "dist\\autopilot.exe" "dist\\esaf-automation-v$($env:VERSION).exe"
        
        # Final check
        if (Test-Path "dist\\esaf-automation-v$($env:VERSION).exe") {
          Write-Host "✅ Final .exe ready"
        } else {
          Write-Error "❌ Final .exe not found"
          exit 1
        }

    - name: Upload artifact (for debugging)
      uses: actions/upload-artifact@v4
      with:
        name: esaf-automation-exe
        path: dist/esaf-automation-v${{ steps.get_version.outputs.VERSION }}.exe

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        name: Release v${{ steps.get_version.outputs.VERSION }}
        body: |
          ESAF Automation Suite v${{ steps.get_version.outputs.VERSION }}
          
          **First run instructions**:
          1. Run the `.exe`
          2. Go to **Option 1 → Option 7** to generate `esaf_config.json`
          3. Then use any option
        draft: true

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/esaf-automation-v${{ steps.get_version.outputs.VERSION }}.exe
        asset_name: esaf-automation-v${{ steps.get_version.outputs.VERSION }}.exe
        asset_content_type: application/octet-stream
